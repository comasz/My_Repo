* New Relic dashboard for App Sec metrics

This repository contains an example dashboard for observing AppSec metrics.

[[./media/dashboard.png]]

  ----------
* Quickstart

1. [[https://docs.gitlab.com/ee/user/project/repository/forking_workflow.html#creating-a-fork][Fork]] current repository.

2. [[https://docs.gitlab.com/ee/gitlab-basics/start-using-git.html#clone-a-repository][Clone]] forked repository to local HD.

3. Modify =TF_VAR_gitlab_namespace= input in accordance to the project or group artifacts that you would like to capture.
   
Example: below ".gitlab-ci.yml" captures all artifacts in =gitlab.com/williamhillplc/infosec/devsecops/analyzers%= project.
#+BEGIN_SRC 
## -> .gitlab-ci.yml <- ##

default:
  tags:
    - appsec-aws-dev-apps
    - appsec-aws-dev-infra

variables:
  TF_VAR_gitlab_namespace: "gitlab.com/williamhillplc/infosec/devsecops/analyzers%"
#+END_SRC
****** note: the character =%= means that anything after it will be accepted, as in =SQL=. 

4. [[https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html#create-a-personal-access-token][Create personal Access Token]]. Store in variable outlined in the next step.
5. [[https://docs.gitlab.com/ee/ci/variables/#add-a-cicd-variable-to-a-project][Create GitLab CI/CD variable]]. Add personal Access Token: key: GITLAB_TOKEN  value: <generated access token>
6. Add additional CI/CD variables: 

    - TF_VAR_newrelic_account_id : <Your NR Account ID> (generate NR APi sccout ID outlined in next step)
    - TF_VAR_newrelic_api_key : <Your NR API key> (generate NR APi key outlined in next step)
    - TF_VAR_permissions : "private"  (you can change to "public_read_only" or "public_read_write" if desired)

7. [[https://one.newrelic.com/launcher/api-keys-ui.api-keys-launcher][Navigate to New Relic API page]]. [[./media/nr-create-api-key.png]]


8. Save, commit and push to =develop= branch.

9.  Navigate to =Deployments= -> =Environments= on Gitlab dashboard, select =Development=, then select =View Deployment= in order to 
    view newly formed NR dashboard. 
    [[./media/environments.png]]
    note: if you push to =main= branch select =Production= instead of =Development=.


* Local development

** Configure Gitlab as Terraform backend

When developing locally, you can configure your backend to point to Gitlab, if
you clone or fork this project, please change the values bellow:

#+begin_src
  terraform init \
    -backend-config="address=https://gitlab.com/api/v4/projects/<YOUR-PROJECT-ID>/terraform/state/<YOUR-STATE-NAME>" \
    -backend-config="lock_address=https://gitlab.com/api/v4/projects/<YOUR-PROJECT-ID>/terraform/state/<YOUR-STATE-NAME>/lock" \
    -backend-config="unlock_address=https://gitlab.com/api/v4/projects/<YOUR-PROJECT-ID>/terraform/state/<YOUR-STATE-NAME>/lock" \
    -backend-config="username=<YOUR-USERNAME>" \
    -backend-config="password=<YOUR-ACCESS-TOKEN>" \
    -backend-config="lock_method=POST" \
    -backend-config="unlock_method=DELETE" \
    -backend-config="retry_wait_min=5"
#+end_src

If you are working on this project specifically, you can use the following
template, just replacing a few variables:

#+begin_src
terraform init \
  -backend-config="address=https://gitlab.com/api/v4/projects/34412884/terraform/state/<YOUR-STATE-NAME>" \
  -backend-config="lock_address=https://gitlab.com/api/v4/projects/34412884/terraform/state/<YOUR-STATE-NAME>/lock" \
  -backend-config="unlock_address=https://gitlab.com/api/v4/projects/34412884/terraform/state/<YOUR-STATE-NAME>/lock" \
  -backend-config="username=<YOUR-USERNAME>" \
  -backend-config="password=<YOUR-ACCESS-TOKEN>" \
  -backend-config="lock_method=POST" \
  -backend-config="unlock_method=DELETE" \
  -backend-config="retry_wait_min=5"
#+end_src

*
* References
 - [[https://registry.terraform.io/providers/newrelic/newrelic/latest/docs][Terraform Registry]]
 - [[https://registry.terraform.io/providers/newrelic/newrelic/latest/docs/resources/one_dashboard][New Relic Dashboard terraform documentation]]
 - [[https://docs.gitlab.com/ee/user/infrastructure/iac/terraform_state.html][How to manage Terraform State with Gitlab]]
 - [[https://gitlab.com/gitlab-org/terraform-images/-/blob/master/src/bin/gitlab-terraform.sh][Terraform Pipeline from Gitlab]]
 - [[https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Terraform/Base.latest.gitlab-ci.yml][Latest Terraform Pipeline from Gitlab]]
 - [[https://docs.gitlab.com/ee/user/infrastructure/iac/][Infrastructure as Code with Terraform and Gitlab]]
